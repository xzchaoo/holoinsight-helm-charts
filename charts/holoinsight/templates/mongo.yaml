{{ if .Values.db.mongo.enabled | default false }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: holoinsight-mongo
  namespace: {{ .Release.namespace }}
spec:
  serviceName: mongo
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: holoinsight-mongo
  template:
    metadata:
      name: holoinsight-mongo
      labels:
        app.kubernetes.io/name: holoinsight-mongo
        {{- include "chart_common_labels" . | indent 8 }}
    spec:
      restartPolicy: Always
      volumes:
      - name: cm
        configMap:
          name: mongo-cm
      containers:
      - name: mongo
        image: {{ .Values.db.mongo.image }}
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: admin
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: admin
        - name: MONGO_INITDB_DATABASE
          value: holoinsight
        volumeMounts:
        - mountPath: /docker-entrypoint-initdb.d/init.js
          name: cm
          subPath: init.js
        ports:
        - name: mongo
          containerPort: 27017
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 27017
          failureThreshold: 3
          successThreshold: 1
          timeoutSeconds: 10
          periodSeconds: 3
          initialDelaySeconds: 10
        {{- if .Values.db.mongo.resources }}
        resources:
          {{- toYaml .Values.db.mongo.resources | nindent 10 }}
        {{- end }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-cm
  namespace: {{ .Release.namespace }}
data:
  init.js: |
    db.createUser({
        user: "holoinsight",
        pwd: "holoinsight",
        roles: [
            {role: "readWrite", db: "holoinsight"}
        ]
    })

---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: {{ .Release.namespace }}
  labels:
    name: holoinsight-mongo
spec:
  clusterIP: None
  ports:
  - name: mongo
    protocol: TCP
    port: 27017
    targetPort: 27017
  selector:
    app.kubernetes.io/name: holoinsight-mongo

{{- end }}
